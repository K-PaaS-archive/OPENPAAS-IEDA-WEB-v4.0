- type: replace
  path: /releases/-
  value:
    name: uaa
    url: file:///((uaaRelease))
    
# Switch Director to use UAA
- type: replace
  path: /instance_groups/name=bosh/properties/director/user_management/provider
  value: uaa

- type: remove
  path: /instance_groups/name=bosh/properties/director/user_management/local

- type: replace
  path: /instance_groups/name=bosh/properties/director/user_management/uaa?/url
  value: "https://((internal_ip)):8443"

- type: replace
  path: /instance_groups/name=bosh/properties/director/user_management/uaa/public_key?
  value: ((uaa_jwt_signing_key.public_key))

# Add UAA job
- type: replace
  path: /instance_groups/name=bosh/jobs/-
  value:
    name: uaa
    release: uaa
    properties:
      encryption:
        encryption_keys:
        - label: uaa-encryption-key-1
          passphrase: ((uaa_encryption_key_1))
        active_key_label: uaa-encryption-key-1
      uaa:
        url: "https://((internal_ip)):8443"
        port: -1
        sslPrivateKey: ((uaa_ssl.private_key))
        sslCertificate: ((uaa_ssl.certificate))
        jwt:
          signing_key: ((uaa_jwt_signing_key.private_key))
          verification_key: ((uaa_jwt_signing_key.public_key))
        scim:
          groups:
          - scim.write
          - scim.read
          - bosh.admin
          users:
          - name: admin
            groups: [bosh.admin]
            password: "admin"
        clients:
          bosh_cli:
            override: true
            authorized-grant-types: password,refresh_token
            scope: openid,bosh.admin,bosh.read,bosh.*.admin,bosh.*.read,bosh.teams.*.admin,bosh.teams.*.read
            authorities: uaa.none
            access-token-validity: 120 # 2 min
            refresh-token-validity: 86400 # 1 day
            secret: ""
          admin:
            override: true
            authorized-grant-types: client_credentials
            scope: ""
            authorities: bosh.admin
            secret: admin
          hm:
            override: true
            authorized-grant-types: client_credentials
            scope: ""
            authorities: bosh.admin
            secret: ((hm_password))
          uaa_admin:
            override: true
            authorized-grant-types: client_credentials
            scope: ""
            authorities: clients.read,clients.write,clients.secret,uaa.admin,scim.read,scim.write,password.write
            secret: ((uaa_admin_client_secret))
        login: {client_secret: ((uaa_login_client_secret))}
        zones: {internal: {hostnames: []}}
      login:
        saml:
          serviceProviderKey: ((uaa_service_provider_ssl.private_key))
          serviceProviderKeyPassword: "" # TODO: Remove this when UAA defaults this value
          serviceProviderCertificate: ((uaa_service_provider_ssl.certificate))
      uaadb:
        address: 127.0.0.1
        port: 5432
        db_scheme: postgresql
        databases:
        - tag: uaa
          name: uaa
        roles:
        - tag: admin
          name: postgres
          password: ((postgres_password))

- type: replace
  path: /instance_groups/name=bosh/properties/postgres/additional_databases?/-
  value: uaa

# Switch HM to use UAA
- type: replace
  path: /instance_groups/name=bosh/properties/hm/director_account/client_id?
  value: hm

- type: replace
  path: /instance_groups/name=bosh/properties/hm/director_account/client_secret?
  value: ((hm_password))
